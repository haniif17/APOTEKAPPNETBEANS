/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package praktik12;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.ParseException; 

public class ApotekApp extends javax.swing.JFrame {

    /**
     * Creates new form ApotekApp
     */
    public ApotekApp() {
        initComponents();
//        loadTableData(); msl butuh ad lngsng ditampilin di ui
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tf_idObat = new javax.swing.JTextField();
        tf_namaObat = new javax.swing.JTextField();
        tf_jumlahObat = new javax.swing.JTextField();
        btn_addData = new javax.swing.JButton();
        btn_hapusData = new javax.swing.JButton();
        btn_editData = new javax.swing.JButton();
        btn_lihatData = new javax.swing.JButton();
        tf_expiredObat = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tf_cariObat = new javax.swing.JTextField();
        btn_cariObat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_cariObat = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("ID OBAT :");

        jPanel2.setBackground(new java.awt.Color(204, 255, 0));

        jLabel2.setText("BISMILLAH SEHAT");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("APOTEK SYAHDANA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        jLabel5.setText("NAMA OBAT :");

        jLabel6.setText("JUMLAH :");

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel7.setText("INPUT DATA OBAT APOTEK");

        tf_idObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_idObatActionPerformed(evt);
            }
        });

        tf_namaObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_namaObatActionPerformed(evt);
            }
        });

        tf_jumlahObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_jumlahObatActionPerformed(evt);
            }
        });

        btn_addData.setBackground(new java.awt.Color(255, 102, 51));
        btn_addData.setText("TAMBAH");
        btn_addData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addDataActionPerformed(evt);
            }
        });

        btn_hapusData.setBackground(new java.awt.Color(255, 102, 51));
        btn_hapusData.setText("HAPUS");
        btn_hapusData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusDataActionPerformed(evt);
            }
        });

        btn_editData.setBackground(new java.awt.Color(255, 102, 51));
        btn_editData.setText("EDIT");
        btn_editData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editDataActionPerformed(evt);
            }
        });

        btn_lihatData.setBackground(new java.awt.Color(255, 102, 51));
        btn_lihatData.setText("LIST OBAT");
        btn_lihatData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lihatDataActionPerformed(evt);
            }
        });

        tf_expiredObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_expiredObatActionPerformed(evt);
            }
        });

        jLabel8.setText("EXPIRED :");

        jLabel9.setText("NAMA OBAT:");

        tf_cariObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_cariObatActionPerformed(evt);
            }
        });

        btn_cariObat.setBackground(new java.awt.Color(255, 102, 51));
        btn_cariObat.setText("CARI");
        btn_cariObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cariObatActionPerformed(evt);
            }
        });

        table_cariObat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID OBAT", "NAMA OBAT", "JUMLAH", "EXPIRED"
            }
        ));
        jScrollPane1.setViewportView(table_cariObat);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel7)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(btn_addData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_hapusData)
                        .addGap(18, 18, 18)
                        .addComponent(btn_editData))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tf_expiredObat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tf_jumlahObat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tf_namaObat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(70, 70, 70)
                                .addComponent(tf_idObat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(btn_lihatData, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(2, 2, 2)
                        .addComponent(tf_cariObat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_cariObat))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_idObat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(tf_cariObat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cariObat))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(tf_namaObat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(tf_jumlahObat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(tf_expiredObat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn_addData)
                                    .addComponent(btn_hapusData)
                                    .addComponent(btn_editData))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_lihatData)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_idObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_idObatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_idObatActionPerformed

    private void tf_namaObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_namaObatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_namaObatActionPerformed

    private void tf_jumlahObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_jumlahObatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_jumlahObatActionPerformed

    private void btn_addDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addDataActionPerformed
        // TODO add your handling code here:
        String idObatStr = tf_idObat.getText();
        String namaObat = tf_namaObat.getText();
        String jumlahObatStr = tf_jumlahObat.getText();
        String expiredObatStr = tf_expiredObat.getText();

         
        if (idObatStr.isEmpty() || namaObat.isEmpty() || jumlahObatStr.isEmpty() || expiredObatStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua bagian harus diisi!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Connection conn = null;
        PreparedStatement pstmt = null;

        try { 
            int idObat = Integer.parseInt(idObatStr);
            int jumlahObat = Integer.parseInt(jumlahObatStr);

             
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            Date parsedExpiredDate = formatter.parse(expiredObatStr);
             
            java.sql.Date sqlExpiredDate = new java.sql.Date(parsedExpiredDate.getTime());

            conn = DatabaseController.getConnection();
            String sql = "INSERT INTO StokObat (id_obat, nama, jumlah, expired) VALUES (?, ?, ?, ?)";
            pstmt = conn.prepareStatement(sql);

            pstmt.setInt(1, idObat);
            pstmt.setString(2, namaObat);
            pstmt.setInt(3, jumlahObat);
            pstmt.setDate(4, sqlExpiredDate);

            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data obat berhasil ditambahkan!");
                clearFields();
                loadTableData();
                DatabaseController.setLastUpdateTimestamp(new Date());
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menambahkan data obat.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            // Tangani error jika ID Obat atau Jumlah Obat bukan angka
            JOptionPane.showMessageDialog(this, "ID Obat dan Jumlah harus berupa angka!", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException e) {
            // Tangani error jika format tanggal salah
            JOptionPane.showMessageDialog(this, "Format tanggal EXPIRED salah. Gunakan `yyyy-MM-dd` (Contoh: 2025-12-31).", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            // misal ad id yg sama
            if (e.getMessage().contains("Duplicate entry") || e.getMessage().contains("PRIMARY KEY")) {
                JOptionPane.showMessageDialog(this, "ID Obat '" + idObatStr + "' sudah ada. Gunakan ID lain.", "Error Duplikasi ID", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Database Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
            e.printStackTrace(); 
        } finally { 
            if (pstmt != null) {
                try { pstmt.close(); } catch (SQLException e) { /* ignore */ }
            }
            if (conn != null) { // koneksi
                DatabaseController.closeConnection(conn);
            }
        }
    }//GEN-LAST:event_btn_addDataActionPerformed

    private void btn_hapusDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusDataActionPerformed
        // TODO add your handling code here:
        String idObatStr = tf_idObat.getText(); // Ambil ID Obat dari field input

         
        if (idObatStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID Obat harus diisi untuk menghapus data!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        
        int confirm = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data obat dengan ID: " + idObatStr + "?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) { 
            Connection conn = null;
            PreparedStatement pstmt = null;

            try {
                int idObat = Integer.parseInt(idObatStr); 

                conn = DatabaseController.getConnection(); 
                String sql = "DELETE FROM StokObat WHERE id_obat = ?";  
                pstmt = conn.prepareStatement(sql);
                pstmt.setInt(1, idObat); 

                int rowsAffected = pstmt.executeUpdate();  

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Data obat berhasil dihapus!");
                    clearFields();  
                    loadTableData(); 
                    DatabaseController.setLastUpdateTimestamp(new Date());
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menghapus data obat. ID Obat mungkin tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "ID Obat harus berupa angka!", "Input Error", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Database Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            } finally {
                if (pstmt != null) { try { pstmt.close(); } catch (SQLException e) { /* ignore */ } }
                if (conn != null) {
                    DatabaseController.closeConnection(conn);
                }
            }
        }
    }//GEN-LAST:event_btn_hapusDataActionPerformed

    private void btn_editDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editDataActionPerformed
        // TODO add your handling code here:
         String idObatStr = tf_idObat.getText();      
        String jumlahObatStr = tf_jumlahObat.getText(); 

        
        if (idObatStr.isEmpty() || jumlahObatStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID Obat dan Jumlah harus diisi untuk mengedit data!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Connection conn = null;
        PreparedStatement pstmt = null;

        try {
            int idObat = Integer.parseInt(idObatStr);       
            int jumlahObatBaru = Integer.parseInt(jumlahObatStr);  

            conn = DatabaseController.getConnection();  

             
            String sql = "UPDATE StokObat SET jumlah = ? WHERE id_obat = ?";
            pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, jumlahObatBaru);  
            pstmt.setInt(2, idObat);          

            int rowsAffected = pstmt.executeUpdate();  

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data obat berhasil diupdate!");
                clearFields();    
                loadTableData();  
                DatabaseController.setLastUpdateTimestamp(new Date());
            } else {
                JOptionPane.showMessageDialog(this, "Gagal mengupdate data obat. ID Obat mungkin tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID Obat dan Jumlah harus berupa angka!", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            if (pstmt != null) { try { pstmt.close(); } catch (SQLException e) { /* ignore */ } }
            if (conn != null) {
                DatabaseController.closeConnection(conn);
            }
        }
    }//GEN-LAST:event_btn_editDataActionPerformed

    private void btn_lihatDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lihatDataActionPerformed
        // TODO add your handling code here:
        StokObat stokFrame = new StokObat(); 
        stokFrame.setVisible(true);
//        loadTableData();
    }//GEN-LAST:event_btn_lihatDataActionPerformed

    private void tf_expiredObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_expiredObatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_expiredObatActionPerformed

    private void tf_cariObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_cariObatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_cariObatActionPerformed

    private void btn_cariObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cariObatActionPerformed
        // TODO add your handling code here:
        String namaObatCari = tf_cariObat.getText();  

        DefaultTableModel model = (DefaultTableModel) table_cariObat.getModel();
        model.setRowCount(0); // Kosongkan semua baris di tabel

        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            conn = DatabaseController.getConnection();  

            String sql;
            if (namaObatCari.isEmpty()) {
                sql = "SELECT id_obat, nama, jumlah, expired FROM StokObat";
                pstmt = conn.prepareStatement(sql);
            } else {
                sql = "SELECT id_obat, nama, jumlah, expired FROM StokObat WHERE nama LIKE ?";
                pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, "%" + namaObatCari + "%");  
            }

            rs = pstmt.executeQuery();  

            
            while (rs.next()) {
                Vector<Object> row = new Vector<>();
                row.add(rs.getInt("id_obat"));
                row.add(rs.getString("nama"));
                row.add(rs.getInt("jumlah"));
                row.add(rs.getDate("expired"));
                model.addRow(row);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database Error saat mencari data: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            if (rs != null) { try { rs.close(); } catch (SQLException e) { /* ignore */ } }
            if (pstmt != null) { try { pstmt.close(); } catch (SQLException e) { /* ignore */ } }
            if (conn != null) {
                DatabaseController.closeConnection(conn);
            }
        }
    }//GEN-LAST:event_btn_cariObatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApotekApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApotekApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApotekApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApotekApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApotekApp().setVisible(true);
            }
        });
    }
    
    private void clearFields() {
        tf_idObat.setText("");
        tf_namaObat.setText("");
        tf_jumlahObat.setText("");
        tf_expiredObat.setText("");
        tf_cariObat.setText(""); // Membersihkan juga field pencarian
    }
    
    private void loadTableData() {
        // Ini adalah pengecekan darurat. Seharusnya JTable sudah ada jika kamu sudah mendesainnya.
        if (table_cariObat == null || table_cariObat.getModel() == null) {
            System.err.println("Error: JTable atau model tabel belum diinisialisasi dengan benar. Pastikan JTable sudah ditambahkan di desain GUI Anda.");
            JOptionPane.showMessageDialog(this, "Tabel belum siap. Pastikan JTable sudah ditambahkan di desain GUI Anda.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) table_cariObat.getModel();
        model.setRowCount(0); // Membersihkan semua baris yang ada di tabel

        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            conn = DatabaseController.getConnection(); // Dapatkan koneksi dari DatabaseController
            String sql = "SELECT id_obat, nama, jumlah, expired FROM StokObat";
            pstmt = conn.prepareStatement(sql);
            rs = pstmt.executeQuery();

            while (rs.next()) {
                Vector<Object> row = new Vector<>();
                row.add(rs.getInt("id_obat"));
                row.add(rs.getString("nama"));
                row.add(rs.getInt("jumlah"));
                row.add(rs.getDate("expired")); // Tanggal akan diformat otomatis oleh JTable
                model.addRow(row); // Tambahkan baris ke tabel
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error saat memuat data: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            if (rs != null) { try { rs.close(); } catch (SQLException e) { /* ignore */ } }
            if (pstmt != null) { try { pstmt.close(); } catch (SQLException e) { /* ignore */ } }
            DatabaseController.closeConnection(conn);
        }
    
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addData;
    private javax.swing.JButton btn_cariObat;
    private javax.swing.JButton btn_editData;
    private javax.swing.JButton btn_hapusData;
    private javax.swing.JButton btn_lihatData;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable table_cariObat;
    private javax.swing.JTextField tf_cariObat;
    private javax.swing.JTextField tf_expiredObat;
    private javax.swing.JTextField tf_idObat;
    private javax.swing.JTextField tf_jumlahObat;
    private javax.swing.JTextField tf_namaObat;
    // End of variables declaration//GEN-END:variables
    
    
}
